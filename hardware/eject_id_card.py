import serial
import time
import configparser

def send_command(ser, hex_str, delay=0.3):
    """‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏ö‡∏ö Hex String ‡πÅ‡∏•‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Serial"""
    cmd = bytes.fromhex(hex_str)
    ser.write(cmd)
    time.sleep(delay)
    response = ser.read(64)
    print(f"[üì§] ‡∏™‡πà‡∏á: {hex_str}")
    print(f"[üì•] ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö: {response.hex().upper()}")
    return response.hex().upper()

def eject_id_card():
    """‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏≠‡∏≠‡∏Å"""
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏û‡∏≠‡∏£‡πå‡∏ï COM ‡∏à‡∏≤‡∏Å config.ini
    config = configparser.ConfigParser()
    config.read("config.ini")
    port = config["thai_id_reader"]["port"]

    try:
        ser = serial.Serial(port, baudrate=57600, timeout=1)
        print(f"[üîÑ] ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö {port}...")

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ COM
        print("\n‚ñ∂Ô∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ COM")
        set_com_cmd = 'F2 00 00 03 43 30 31 03 B0'
        send_command(ser, set_com_cmd)

        # ‡∏¢‡πâ‡∏≤‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏û‡∏±‡∏Å
        print("\n‚ñ∂Ô∏è ‡∏¢‡πâ‡∏≤‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏û‡∏±‡∏Å")
        move_to_parking_cmd = 'F2 00 00 03 43 30 30 03 B1'
        send_command(ser, move_to_parking_cmd)

        # ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡∏≠‡∏≠‡∏Å
        print("\n‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏≠‡∏≠‡∏Å...")
        eject_cmd = 'F2 00 00 03 43 DC 31 03 5C'
        send_command(ser, eject_cmd)

        ser.close()
        print("[‚úÖ] ‡∏à‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß.")

    except serial.SerialException as e:
        print(f"[‚ùå] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏û‡∏≠‡∏£‡πå‡∏ï {port} ‡πÑ‡∏î‡πâ: {e}")

if __name__ == "__main__":
    eject_id_card()
